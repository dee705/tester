import { Button } from "@/components/ui/button";
import {
Â  DropdownMenu,
Â  DropdownMenuContent,
Â  DropdownMenuItem,
Â  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Music, Menu } from "lucide-react";

const Header = () => {
Â  const scrollToSection = (id: string) => {
Â  Â  const element = document.getElementById(id);
Â  Â  if (element) {
Â  Â  Â  element.scrollIntoView({ behavior: "smooth" });
Â  Â  }
Â  };

  // ðŸ”‘ CHANGED: Replaced "listen now" back to "music" in the array.
Â  const navItems = ["home", "about", "music", "fanpages"];

Â  return (
Â  Â  <header className="fixed top-0 left-0 right-0 z-50
Â  Â  Â  bg-gradient-to-r from-white/90 via-green-50/70 to-green-200/60
Â  Â  Â  backdrop-blur-md border-b border-white/40 shadow-lg">
Â  Â  Â  <div className="container mx-auto px-4 py-2">
Â  Â  Â  Â  <div className="flex items-center justify-between">
Â  Â  Â  Â  Â  {/* Logo */}
Â  Â  Â  Â  Â  <div className="flex items-center space-x-2">
Â  Â  Â  Â  Â  Â  <Music className="h-8 w-8 text-green-600 drop-shadow-md" />
Â  Â  Â  Â  Â  Â  <span className="text-xl font-bold text-green-800">Klarisse</span>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Dropdown Navigation - Desktop */}
Â  Â  Â  Â  Â  <div className="hidden md:flex items-center">
Â  Â  Â  Â  Â  Â  <DropdownMenu>
Â  Â  Â  Â  Â  Â  Â  <DropdownMenuTrigger asChild>
Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="ghost"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-gray-800 hover:text-green-700"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Menu
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </DropdownMenuTrigger>
Â  Â  Â  Â  Â  Â  Â  <DropdownMenuContent className="bg-white/95 backdrop-blur-md shadow-lg rounded-xl border border-green-100">
Â  Â  Â  Â  Â  Â  Â  Â  {navItems.map((item) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <DropdownMenuItem
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={item}
                    // ðŸ”‘ CHANGED: Simple onClick handler restored
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => scrollToSection(item)}
                    // ðŸ”‘ ADDED: Conditional highlight for the "music" item
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`cursor-pointer ${
                        item === "music" 
                            ? "font-semibold bg-green-50 text-green-700" // Highlight classes
                            : "text-gray-800 hover:text-green-700" // Default classes
                    }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.charAt(0).toUpperCase() + item.slice(1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </DropdownMenuItem>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </DropdownMenuContent>
Â  Â  Â  Â  Â  Â  </DropdownMenu>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Dropdown Navigation - Mobile */}
Â  Â  Â  Â  Â  <div className="md:hidden">
Â  Â  Â  Â  Â  Â  <DropdownMenu>
Â  Â  Â  Â  Â  Â  Â  <DropdownMenuTrigger asChild>
Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="ghost"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="p-2 rounded-md bg-white/40 backdrop-blur-md hover:bg-green-100 transition"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Menu className="h-5 w-5" />
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </DropdownMenuTrigger>
Â  Â  Â  Â  Â  Â  Â  <DropdownMenuContent className="bg-white/95 backdrop-blur-lg shadow-lg rounded-xl border border-green-100">
Â  Â  Â  Â  Â  Â  Â  Â  {navItems.map((item) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <DropdownMenuItem
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={item}
                    // ðŸ”‘ CHANGED: Simple onClick handler restored
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => scrollToSection(item)}
                    // ðŸ”‘ ADDED: Conditional highlight for the "music" item
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`cursor-pointer ${
                        item === "music" 
                            ? "font-semibold bg-green-50 text-green-700" // Highlight classes
                            : "text-gray-800 hover:text-green-700" // Default classes
                    }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.charAt(0).toUpperCase() + item.slice(1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </DropdownMenuItem>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </DropdownMenuContent>
Â  Â  Â  Â  Â  Â  </DropdownMenu>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </header>
Â  );
};

export default Header;
